{"version":3,"file":"static/js/233.2ad17885.chunk.js","mappings":"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","sources":["webpack://social-network/./src/common/components/FormTextarea/FormTextarea.module.scss?640e","common/components/FormTextarea/FormTextarea.tsx","webpack://social-network/./src/features/Profile/Profile.module.scss?d926","webpack://social-network/./src/features/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss?56e3","features/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","webpack://social-network/./src/common/components/FormInput/FormInput.module.scss?ac83","common/components/FormInput/FormInput.tsx","features/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","features/Profile/ProfileInfo/Contact/Contact.tsx","features/Profile/ProfileInfo/ProfileData/ProfileData.tsx","features/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social-network/./src/features/Profile/NewsSection/NewsSection.module.scss?9dba","webpack://social-network/./src/common/components/Modal/Modal.module.scss?631e","common/components/Modal/Modal.tsx","features/Profile/NewsSection/NewsSection.tsx","webpack://social-network/./src/features/Profile/MyPosts/MyPosts.module.scss?8dcb","webpack://social-network/./src/features/Profile/MyPosts/Post/Post.module.scss?3e38","features/Profile/MyPosts/Post/Post.tsx","webpack://social-network/./src/features/Profile/MyPosts/Post/AddPostForm.module.scss?91a1","features/Profile/MyPosts/Post/AddPostForm.tsx","features/Profile/MyPosts/MyPosts.tsx","features/Profile/MyPosts/MyPostsContainer.tsx","features/Profile/Profile.tsx","features/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormTextarea_smallUserPhoto__8UorU\",\"inputTextareaBasicLayout\":\"FormTextarea_inputTextareaBasicLayout__VHrFF\",\"formTextareaStyles\":\"FormTextarea_formTextareaStyles__zu1mT\",\"styleTextarea\":\"FormTextarea_styleTextarea__7b86e\",\"formInputStyles\":\"FormTextarea_formInputStyles__9Ewuh\",\"formInput\":\"FormTextarea_formInput__0HwW6\",\"blocksBorder\":\"FormTextarea_blocksBorder__NQLGB\",\"formCheckBox\":\"FormTextarea_formCheckBox__biQVA\"};","import React from 'react';\r\nimport styles from './FormTextarea.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormTextarea({register, name, label, id, rows, validationSchema}) {\r\n\r\n    return <>\r\n        <textarea\r\n            className={styles.styleTextarea}\r\n            id={id}\r\n            name={name}\r\n            placeholder={label}\r\n            rows={rows}\r\n            {...register(name, validationSchema)}\r\n        />\r\n    </>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__U7Y6E\",\"content__img\":\"Profile_content__img__aIkEQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"ProfileStatus_smallUserPhoto__+4-nF\",\"inputTextareaBasicLayout\":\"ProfileStatus_inputTextareaBasicLayout__7BhA8\",\"formInputStyles\":\"ProfileStatus_formInputStyles__T8NAN\",\"statusInput\":\"ProfileStatus_statusInput__bHqgV\",\"formInput\":\"ProfileStatus_formInput__mpYNa\",\"blocksBorder\":\"ProfileStatus_blocksBorder__jArfc\",\"formCheckBox\":\"ProfileStatus_formCheckBox__7+hlt\",\"disabled\":\"ProfileStatus_disabled__Zz5VP\",\"status\":\"ProfileStatus_status__t3KJo\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport styles from './ProfileStatus.module.scss'\r\nimport {SvgSelector} from \"../../../../common/components/svgSelector/svgSelector\";\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusType> = ({status, isOwner, updateStatus}) => {\r\n\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [ProfileStatus, setStatus] = useState(status)\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        if (isEdit) {\r\n            update()\r\n        }\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    const update = () => {\r\n        updateStatus(ProfileStatus)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [status])\r\n\r\n    const isEditFalseStyle = !isOwner ? styles.disabled : styles.status\r\n\r\n    return (\r\n        <>\r\n            {!isEdit ?\r\n                <div onDoubleClick={toggleMode} className={isEditFalseStyle}>\r\n                    <span>{ProfileStatus || 'no status'}</span>\r\n                    {isOwner && <SvgSelector svgName={'edit'}/>}\r\n                </div> :\r\n                <input onBlur={toggleMode} onChange={onStatusChange} autoFocus\r\n                       value={ProfileStatus} className={styles.statusInput}/>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormInput_smallUserPhoto__ijCy3\",\"inputTextareaBasicLayout\":\"FormInput_inputTextareaBasicLayout__dCa2c\",\"formInputStyles\":\"FormInput_formInputStyles__aKxI3\",\"formInput\":\"FormInput_formInput__F2G-5\",\"blocksBorder\":\"FormInput_blocksBorder__O5DWB\",\"formCheckBox\":\"FormInput_formCheckBox__dWYO1\"};","import React from 'react';\r\nimport styles from './FormInput.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormInput({register, name, type, label, id, isNested}) {\r\n    if (isNested) {\r\n        name = `contacts.${name}`\r\n    }\r\n\r\n    const styleForInput = type === 'input' ? styles.formInput : styles.formCheckBox\r\n    return <>\r\n        <label htmlFor={name}><h3>{label}:</h3></label>\r\n        <input\r\n            className={styleForInput}\r\n            id={id}\r\n            name={name}\r\n            type={type}\r\n            placeholder={label}\r\n            {...register(name)}\r\n        />\r\n    </>\r\n}\r\n\r\n","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {ProfileType} from \"../../../../api/api\";\r\nimport styles from \"../ProfileInfo.module.scss\"\r\nimport {FormInput} from \"../../../../common/components/FormInput/FormInput\";\r\nimport {FormTextarea} from \"../../../../common/components/FormTextarea/FormTextarea\";\r\n\r\nexport const ProfileDataForm = ({profile, isOwner, profileEditStatus, saveProfile}: ProfileDataFormProps) => {\r\n    const {register, handleSubmit} = useForm({\r\n        defaultValues: {...profile}\r\n    })\r\n\r\n    const onSubmit = async (data: any) => {\r\n        saveProfile(data)\r\n    }\r\n\r\n    return <div>\r\n        <form onSubmit={handleSubmit(onSubmit)} className={styles.editProfileInformation}>\r\n            {profileEditStatus && <div className={styles.profileEditStatus}>{profileEditStatus}</div>}\r\n            {isOwner && <div className={styles.saveButtons}>\r\n                <button className={styles.saveButton}\r\n                        type=\"submit\">Save\r\n                </button>\r\n            </div>}\r\n            <div>\r\n                <FormInput id=\"fullName\"\r\n                           type=\"input\"\r\n                           name=\"fullName\"\r\n                           label=\"Full name\"\r\n                           register={register}\r\n                           isNested={false}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h3>About me</h3>\r\n                <FormTextarea id=\"aboutMe\"\r\n                              name=\"aboutMe\"\r\n                              label=\"Write about yourself...\"\r\n                              rows={3}\r\n                              validationSchema={{}}\r\n                              register={register}/>\r\n            </div>\r\n            <div>\r\n                <FormInput id=\"lookingForAJob\"\r\n                           type=\"checkbox\"\r\n                           name=\"lookingForAJob\"\r\n                           label=\"Looking for a job\"\r\n                           register={register}\r\n                           isNested={false}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Looking for a job description</h3>\r\n                <FormTextarea id=\"lookingForAJobDescription\"\r\n                              name=\"lookingForAJobDescription\"\r\n                              label=\"Write about a job which you're looking for...\"\r\n                              rows={3}\r\n                              validationSchema={{}}\r\n                              register={register}/>\r\n            </div>\r\n            <div>\r\n                {Object.keys(profile.contacts).map(contact => {\r\n\r\n                    return <div key={contact} className={styles.contactForm}>\r\n                        <FormInput id={contact}\r\n                                   type=\"input\"\r\n                                   name={contact}\r\n                                   label={contact}\r\n                                   isNested={true}\r\n                                   register={register}\r\n                        />\r\n\r\n                    </div>\r\n                })}</div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\ntype ProfileDataFormProps = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    setIsEdit: (boolean: boolean) => void\r\n    profileEditStatus: string | null\r\n    saveProfile: (profile: any) => void\r\n}","import styles from \"../ProfileInfo.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const Contact = ({contactTitle, contactValue}: ContactProps) => {\r\n    return (\r\n        <div className={styles.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ContactProps = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}","import styles from \"../ProfileInfo.module.scss\";\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../../api/api\";\r\nimport {Contact} from \"../Contact/Contact\";\r\n\r\nexport const ProfileData = ({profile, isOwner, setIsEdit}: ProfileDataProps) => {\r\n\r\n    const aboutMeField = profile.aboutMe\r\n    const lookingForAJobDescriptionField = profile.lookingForAJobDescription ? profile.lookingForAJobDescription : '...'\r\n\r\n    const contacts = Object.keys(profile.contacts).map((contact) => {\r\n        // @ts-ignore\r\n        const contactsValue = profile.contacts[contact]\r\n        if (contactsValue) {\r\n            // @ts-ignore\r\n            return <Contact key={contact} contactTitle={contact} contactValue={profile.contacts[contact]}/>\r\n        }\r\n    })\r\n\r\n    return <div className={styles.profileDataContainer}>\r\n        {Boolean(isOwner) && <div className={styles.settingButtons}>\r\n            <button onClick={() => setIsEdit(true)} className={styles.settingButton}> Settings</button>\r\n        </div>}\r\n        <div className={styles.aboutMe}>\r\n            <h3>About me:</h3><span>{aboutMeField}</span>\r\n        </div>\r\n        <div><b>Looking for a job\r\n            description</b>: {lookingForAJobDescriptionField}\r\n        </div>\r\n        <div>{contacts}</div>\r\n    </div>\r\n}\r\n\r\nexport type ProfileDataProps = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    setIsEdit: (boolean: boolean) => void\r\n}","import React, {ChangeEvent, useRef} from 'react';\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\nimport {ProfilePropsType} from \"../Profile\";\nimport userPhoto from \"../../../assets/images/avatar_empty.png\";\nimport {ProfileDataForm} from \"./ProfileDataForm/ProfileDataForm\";\nimport Preloader from \"../../../common/components/Preloader/Preloader\";\nimport styles from \"./ProfileInfo.module.scss\"\nimport {ProfileData} from \"./ProfileData/ProfileData\";\nimport {InteractUser} from \"./InteractUser/InteractUser\";\nimport {SvgSelector} from \"../../../common/components/svgSelector/svgSelector\";\n\nexport const ProfileInfo: React.FC<Omit<ProfilePropsType, 'setPage'>> = (props) => {\n    const {\n        isEdit,\n        setIsEdit,\n        profile,\n        status,\n        updateStatus,\n        isOwner,\n        savePhoto,\n        profileEditStatus,\n        saveProfile,\n        followingInProgress,\n        follow,\n        unFollow,\n        users,\n        userId\n    } = props\n\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const selectFileHandler = () => {\n        inputRef && inputRef.current?.click();\n    };\n\n    const uploadHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length) {\n            const file = e.target.files[0]\n            savePhoto(file)\n        }\n    }\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    let user = users.find(user => user.id === +userId)\n    if (!user) {\n        user = {\n            id: 0,\n            name: '',\n            status: '',\n            photos: {\n                small: '',\n                large: '',\n            },\n            followed: false\n        }\n    }\n\n    return (\n        <div className={styles.profileInfoContainer}>\n            <div className={styles.mainProfileBox}>\n                <img src={profile?.photos?.large ? profile.photos.large : userPhoto} alt={'photo'}\n                     className={styles.profilePhoto}/>\n\n                {Boolean(isOwner) && <div>\n                    <button onClick={selectFileHandler} className={styles.uploadImage}><SvgSelector svgName={'photo'}/>\n                    </button>\n                    <input\n                        style={{display: 'none'}}\n                        ref={inputRef}\n                        type=\"file\"\n                        onChange={uploadHandler}\n                    />\n                </div>}\n\n                <h2 className={styles.fullName}>{profile?.fullName}</h2>\n                <ProfileStatusWithHooks isOwner={isOwner} status={status} updateStatus={updateStatus}/>\n                {!isOwner &&\n                    <div className={styles.interactProfile}>\n                        <InteractUser followingInProgress={followingInProgress} follow={follow}\n                                      unFollow={unFollow}\n                                      user={user}/>\n                    </div>}\n            </div>\n            <div className={styles.restProfileInformation}>{isEdit ?\n                <ProfileDataForm saveProfile={saveProfile} profileEditStatus={profileEditStatus} profile={profile}\n                                 isOwner={isOwner} setIsEdit={setIsEdit}/> :\n                <ProfileData profile={profile} isOwner={isOwner} setIsEdit={setIsEdit}/>}</div>\n        </div>\n    )\n}\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"NewsSection_smallUserPhoto__lSDF2\",\"inputTextareaBasicLayout\":\"NewsSection_inputTextareaBasicLayout__5TVdd\",\"blocksBorder\":\"NewsSection_blocksBorder__Tyel2\",\"section\":\"NewsSection_section__+GlCO\",\"news\":\"NewsSection_news__x+qyM\",\"aboutFeatures\":\"NewsSection_aboutFeatures__oA1aK\",\"infoText\":\"NewsSection_infoText__Jpqu5\",\"openButton\":\"NewsSection_openButton__8rWps\",\"newsLink\":\"NewsSection_newsLink__6-8Y9\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__5xRnp\",\"modal_content\":\"Modal_modal_content__OQtfC\",\"infoText\":\"Modal_infoText__RhFXv\",\"close\":\"Modal_close__bYnlf\",\"active\":\"Modal_active__13eTg\"};","import React, {FC} from \"react\";\r\nimport s from './Modal.module.scss'\r\nimport {SvgSelector} from \"../svgSelector/svgSelector\";\r\n\r\ntype Props = {\r\n    active: boolean\r\n    setActive: (value: boolean) => void\r\n}\r\n\r\nexport const Modal: FC<Props> = ({active, setActive}) => {\r\n    const closeHandler = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div className={active ? `${s.modal} ${s.active}` : s.modal} onClick={() => setActive(false)}>\r\n            <div className={active ? `${s.modal_content} ${s.activeContent}` : s.modal_content}\r\n                 onClick={e => e.stopPropagation()}>\r\n                <SvgSelector svgName={'underDevelopment'}/>\r\n                <div className={s.infoText}>\r\n                    <h3>The project is under development.\r\n                        <br/>\r\n                        Some features may be unavailable.</h3>\r\n                </div>\r\n                <button className={s.close} onClick={closeHandler}>Close</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport styles from './NewsSection.module.scss'\r\nimport {AppPage} from \"../../../app/app-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SvgSelector} from \"../../../common/components/svgSelector/svgSelector\";\r\nimport {Modal} from \"../../../common/components/Modal/Modal\";\r\n\r\nexport const NewsSection: React.FC<Props> = ({setPage}) => {\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n\r\n    const onClickHandler = () => {\r\n        setPage('news')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.section}>\r\n            <div className={styles.aboutFeatures}>\r\n                <SvgSelector svgName={'info'}/>\r\n                <div className={styles.infoText}>\r\n                    <h3>Information\r\n                        <br/>\r\n                        ABOUT FEATURES</h3>\r\n                </div>\r\n                <button className={styles.openButton} onClick={() => setModalActive(true)}>Read</button>\r\n            </div>\r\n            <div className={styles.news}>\r\n                <h3>News</h3>\r\n                <div>With the unveiling of the Nevera Time Attack, at The Quail, A Motorsports Gathering, Rimac\r\n                    Automobili is celebrating a year of breaking performance records – more than 20 so far in 2023.\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>..more</NavLink>\r\n                </div>\r\n                <div>The California Department of Motor Vehicles today requested that Cruise cut in half its fleet of\r\n                    driverless cars in San Francisco, following “concerning incidents” involving the vehicles.\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>\r\n                        ..more\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    Amsterdam to use \"noise cameras\" against too loud cars. Amsterdam has started the fight against\r\n                    noisy motorcycles and cars.\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>..more</NavLink>\r\n                </div>\r\n            </div>\r\n            {modalActive && <Modal active={modalActive} setActive={setModalActive}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\ntype Props = {\r\n    setPage: (page: AppPage) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__28seN\",\"posts\":\"MyPosts_posts__+nnpt\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"Post_smallUserPhoto__7TFQY\",\"inputTextareaBasicLayout\":\"Post_inputTextareaBasicLayout__WhNFF\",\"blocksBorder\":\"Post_blocksBorder__q1gT6\",\"item\":\"Post_item__M7i1R\",\"nameBox\":\"Post_nameBox__DwFPI\",\"postMessage\":\"Post_postMessage__uTgLk\",\"postFooter\":\"Post_postFooter__xcmL0\",\"likes\":\"Post_likes__fDZDc\",\"delete\":\"Post_delete__2uqEr\",\"postForm\":\"Post_postForm__dBAE1\"};","import React from 'react';\nimport styles from './Post.module.scss'\nimport {PostType} from \"../../profile-reducer\";\nimport userPhoto from \"../../../../assets/images/avatar_empty.png\";\nimport {SvgSelector} from \"../../../../common/components/svgSelector/svgSelector\";\n\n\nconst Post: React.FC<MyPostPropsType> = (props) => {\n\n    const postDeleteHandler = (postId: string) => {\n        props.deletePost(postId)\n    }\n\n    return (\n        <>\n            <div className={styles.item}>\n                <div className={styles.nameBox}>\n                    <img src={props.image || userPhoto} alt=\"ava\"/>\n                    <h3>{props.name}</h3>\n                </div>\n                <div className={styles.postMessage}>{props.message}</div>\n                <div className={styles.postFooter}>\n                    <div className={styles.likes}>\n                        <SvgSelector svgName={'likes'}/>\n                        <span>{props.likes}</span>\n                    </div>\n                    <button className={styles.delete} onClick={() => postDeleteHandler(props.id)}><SvgSelector svgName={'delete'}/></button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Post;\n\ntype MyPostPropsType = PostType & { deletePost: (postId: string) => void }","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"AddPostForm_smallUserPhoto__eWSx3\",\"inputTextareaBasicLayout\":\"AddPostForm_inputTextareaBasicLayout__ir+XN\",\"blocksBorder\":\"AddPostForm_blocksBorder__ZEZJJ\",\"addPostForm\":\"AddPostForm_addPostForm__G7cqw\",\"messageTextarea\":\"AddPostForm_messageTextarea__-eW0+\",\"sendPost\":\"AddPostForm_sendPost__Tus7k\"};","import {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport styles from './AddPostForm.module.scss'\r\nimport {FormTextarea} from \"../../../../common/components/FormTextarea/FormTextarea\";\r\n\r\nexport const AddPostForm = (props: AddPostFormType) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset\r\n    } = useForm<IPostFormInput>();\r\n    const onSubmit: SubmitHandler<IPostFormInput> = data => {\r\n        props.addPost(data)\r\n        reset()\r\n\r\n    };\r\n    return <form onSubmit={handleSubmit(onSubmit)} className={styles.addPostForm}>\r\n        <div className={styles.messageTextarea}>\r\n            <FormTextarea id=\"post\"\r\n                          name=\"post\"\r\n                          label=\"Write youre post...\"\r\n                          rows={3}\r\n                          register={register}\r\n                          validationSchema={{\r\n                              required: true\r\n                          }}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={styles.sendPost}>Publish</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport type IPostFormInput = {\r\n    post: string\r\n}\r\n\r\ntype AddPostFormType = {\r\n    addPost: (post: IPostFormInput) => void\r\n}\r\n\r\n","import React from 'react';\nimport s from './MyPosts.module.scss'\nimport Post from \"./Post/Post\";\nimport {MyPostsCommonType} from \"./MyPostsContainer\";\nimport {AddPostForm} from \"./Post/AddPostForm\";\n\nclass MyPosts extends React.Component<MyPostsCommonType> {\n\n    shouldComponentUpdate(nextProps: Readonly<MyPostsCommonType>, nextState: Readonly<{}>): boolean {\n        return nextProps !== this.props || nextState !== this.state\n    }\n\n    render() {\n        const {profilePage, auth, addPost, deletePost} = this.props\n\n        const isOwner = profilePage?.profile?.userId === auth.id\n\n        const postElements = profilePage.posts.map(post =>\n            <Post key={post.id} message={post.message}\n                  image={profilePage.profile?.photos.small}\n                  name={profilePage.profile?.fullName}\n                  deletePost={deletePost}\n                  likes={post.likes}\n                  id={post.id}\n            />)\n\n        return (\n            <>\n                <div className={s.postsBlock}>\n                    {isOwner && <AddPostForm addPost={addPost}/>}\n                    <div className={s.posts}>\n                        {postElements}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default MyPosts;\n\n\n","import React, {ComponentType} from 'react';\nimport {addPost, deletePost, ProfileStateType} from \"../profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../app/redux-store\";\nimport {IPostFormInput} from \"./Post/AddPostForm\";\nimport {AuthStateType} from \"../../Login/auth-reducer\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage,\n        auth: state.auth\n    }\n}\n\nexport const MyPostsContainer = compose<ComponentType>(connect(mapStateToProps, {addPost, deletePost}))(MyPosts)\n\ntype mapStateToPropsType = {\n    profilePage: ProfileStateType\n    auth: AuthStateType\n}\n\ntype mapDispatchToProps = {\n    addPost: (post: IPostFormInput) => void\n    deletePost: (postId: string) => void\n}\n\nexport type MyPostsCommonType = mapDispatchToProps & mapStateToPropsType\n\n","import React from 'react';\nimport styles from './Profile.module.scss'\nimport {AppPage} from \"../../app/app-reducer\";\nimport {UserType} from \"../Users/users-reducer\";\nimport {ProfileType} from \"../../api/api\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {NewsSection} from \"./NewsSection/NewsSection\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\n    return (\n        <div className={styles.profileContainer}>\n            <ProfileInfo setIsEdit={props.setIsEdit} isEdit={props.isEdit} saveProfile={props.saveProfile}\n                         profileEditStatus={props.profileEditStatus} savePhoto={props.savePhoto} isOwner={props.isOwner}\n                         profile={props.profile} status={props.status} updateStatus={props.updateStatus}\n                         followingInProgress={props.followingInProgress}\n                         follow={props.follow} unFollow={props.unFollow} users={props.users} userId={props.userId}\n            />\n            <MyPostsContainer/>\n            <NewsSection setPage={props.setPage}/>\n        </div>\n    )\n}\n\nexport type ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n    profileEditStatus: string | null\n    isEdit: boolean\n    updateStatus: (status: string) => void\n    isOwner: boolean\n    savePhoto: (file: File) => void\n    saveProfile: (profile: any) => void\n    setIsEdit: (isEdit: boolean) => void\n    setPage: (page: AppPage) => void\n    followingInProgress: number[]\n    follow: (userId: number) => void\n    unFollow: (userId: number) => void\n    users: UserType[]\n    userId: string\n}\n\n\n\n","import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, savePhoto, saveProfile, setIsEdit, updateStatus} from \"./profile-reducer\";\nimport {AppStateType} from \"../../app/redux-store\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {ProfileType} from \"../../api/api\";\nimport {withAuthRedirect} from \"../../common/hoc/withAuthRedirect\";\nimport {AppPage, setPage} from \"../../app/app-reducer\";\nimport {follow, unFollow, UserType} from \"../Users/users-reducer\";\n\nexport class ProfileAPIComponent extends React.Component<PropsType> {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.profileId!.toString()\n            if (!userId) {\n                this.props.history.push('login')\n            }\n        }\n\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return <Profile isOwner={!this.props.match.params.userId}\n                        userId={this.props.match.params.userId}\n                        {...this.props}\n                        profile={this.props.profile}\n                        status={this.props.status}\n                        savePhoto={this.props.savePhoto}\n                        updateStatus={this.props.updateStatus}\n                        profileEditStatus={this.props.profileEditStatus}\n                        saveProfile={this.props.saveProfile}\n                        isEdit={this.props.isEdit}\n                        setIsEdit={this.props.setIsEdit}\n                        setPage={this.props.setPage}\n                        followingInProgress={this.props.followingInProgress}\n                        follow={this.props.follow}\n                        unFollow={this.props.unFollow}\n                        users={this.props.users}\n        />\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    profileId: state.auth.id,\n    profileEditStatus: state.profilePage.profileEditStatus,\n    isEdit: state.profilePage.isEdit,\n    selectedPage: state.app.selectedPage,\n    followingInProgress: state.usersPage.followingInProgress,\n    users: state.usersPage.users\n})\n\nconst ProfileContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        getProfile,\n        getStatus,\n        updateStatus,\n        savePhoto,\n        saveProfile,\n        setIsEdit,\n        setPage,\n        follow,\n        unFollow\n    }),\n    withRouter, withAuthRedirect)(ProfileAPIComponent)\n\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype mapDispatchToPropsType = {\n    getProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n    updateStatus: (status: string) => void\n    savePhoto: (file: File) => void\n    saveProfile: (profile: any) => void\n    setIsEdit: (isEdit: boolean) => void\n    setPage: (page: AppPage) => void\n    follow: (userId: number) => void\n    unFollow: (userId: number) => void\n}\n\ntype mapStateToPropsType = {\n    profile: ProfileType | null\n    status: string\n    profileId: number | null\n    profileEditStatus: string | null\n    isEdit: boolean\n    selectedPage: AppPage\n    followingInProgress: number[]\n    users: UserType[]\n}\n\ntype OwnPropsType = mapStateToPropsType & mapDispatchToPropsType\n\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nexport default ProfileContainer"],"names":["FormTextarea","_ref","register","name","label","id","rows","validationSchema","_jsx","_Fragment","children","className","styles","styleTextarea","placeholder","ProfileStatusWithHooks","status","isOwner","updateStatus","isEdit","setIsEdit","useState","ProfileStatus","setStatus","toggleMode","update","useEffect","isEditFalseStyle","onBlur","onChange","e","currentTarget","value","autoFocus","_jsxs","onDoubleClick","SvgSelector","svgName","FormInput","type","isNested","concat","styleForInput","htmlFor","ProfileDataForm","profile","profileEditStatus","saveProfile","handleSubmit","useForm","defaultValues","onSubmit","async","data","editProfileInformation","saveButtons","saveButton","Object","keys","contacts","map","contact","contactForm","Contact","contactTitle","contactValue","ProfileData","aboutMeField","aboutMe","lookingForAJobDescriptionField","lookingForAJobDescription","profileDataContainer","Boolean","settingButtons","onClick","settingButton","ProfileInfo","props","_profile$photos","savePhoto","followingInProgress","follow","unFollow","users","userId","inputRef","useRef","Preloader","user","find","photos","small","large","followed","profileInfoContainer","mainProfileBox","src","userPhoto","alt","profilePhoto","selectFileHandler","_inputRef$current","current","click","uploadImage","style","display","ref","target","files","length","file","fullName","interactProfile","InteractUser","restProfileInformation","Modal","active","setActive","s","modal","modal_content","activeContent","stopPropagation","infoText","close","closeHandler","NewsSection","setPage","modalActive","setModalActive","onClickHandler","NavLink","to","image","message","likes","postDeleteHandler","postId","deletePost","AddPostForm","reset","addPost","required","MyPosts","React","shouldComponentUpdate","nextProps","nextState","this","state","render","_profilePage$profile","profilePage","auth","postElements","posts","post","_profilePage$profile2","_profilePage$profile3","Post","MyPostsContainer","compose","connect","Profile","ProfileAPIComponent","refreshProfile","match","params","profileId","toString","history","push","getProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","selectedPage","app","usersPage","withRouter","withAuthRedirect"],"sourceRoot":""}