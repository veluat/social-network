{"version":3,"file":"static/js/874.510cac64.chunk.js","mappings":"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","sources":["webpack://social-network/./src/common/components/FormTextarea/FormTextarea.module.scss?640e","common/components/FormTextarea/FormTextarea.tsx","webpack://social-network/./src/features/Profile/Profile.module.scss?d926","webpack://social-network/./src/features/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss?56e3","features/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","webpack://social-network/./src/common/components/FormInput/FormInput.module.scss?ac83","common/components/FormInput/FormInput.tsx","features/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","features/Profile/ProfileInfo/Contact/Contact.tsx","features/Profile/ProfileInfo/ProfileData/ProfileData.tsx","features/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social-network/./src/features/Profile/NewsSection/NewsSection.module.scss?9dba","webpack://social-network/./src/common/components/Modal/Modal.module.scss?631e","common/components/Modal/Modal.tsx","features/Profile/NewsSection/NewsSection.tsx","webpack://social-network/./src/features/Profile/MyPosts/MyPosts.module.scss?8dcb","webpack://social-network/./src/features/Profile/MyPosts/Post/Post.module.scss?3e38","features/Profile/MyPosts/Post/Post.tsx","webpack://social-network/./src/features/Profile/MyPosts/Post/AddPostForm.module.scss?91a1","features/Profile/MyPosts/Post/AddPostForm.tsx","features/Profile/MyPosts/MyPosts.tsx","features/Profile/MyPosts/MyPostsContainer.tsx","features/Profile/Profile.tsx","features/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormTextarea_smallUserPhoto__pSl6Y\",\"inputTextareaBasicLayout\":\"FormTextarea_inputTextareaBasicLayout__R-vda\",\"formTextareaStyles\":\"FormTextarea_formTextareaStyles__tOUZ7\",\"styleTextarea\":\"FormTextarea_styleTextarea__Y9z8D\",\"formInputStyles\":\"FormTextarea_formInputStyles__GZOWI\",\"formInput\":\"FormTextarea_formInput__vjURD\",\"blocksBorder\":\"FormTextarea_blocksBorder__cUL5-\",\"formCheckBox\":\"FormTextarea_formCheckBox__Yl1um\"};","import React from 'react';\r\nimport styles from './FormTextarea.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormTextarea({register, name, label, id, rows, validationSchema}) {\r\n\r\n    return <>\r\n        <textarea\r\n            className={styles.styleTextarea}\r\n            id={id}\r\n            name={name}\r\n            placeholder={label}\r\n            rows={rows}\r\n            {...register(name, validationSchema)}\r\n        />\r\n    </>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__JaUVg\",\"content__img\":\"Profile_content__img__dCQU-\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"ProfileStatus_smallUserPhoto__VkAqx\",\"inputTextareaBasicLayout\":\"ProfileStatus_inputTextareaBasicLayout__c7WVJ\",\"formInputStyles\":\"ProfileStatus_formInputStyles__OVOZO\",\"statusInput\":\"ProfileStatus_statusInput__hv9zm\",\"formInput\":\"ProfileStatus_formInput__DVyCf\",\"blocksBorder\":\"ProfileStatus_blocksBorder__k7q2s\",\"formCheckBox\":\"ProfileStatus_formCheckBox__nKucb\",\"disabled\":\"ProfileStatus_disabled__7iCaM\",\"status\":\"ProfileStatus_status__9Qbke\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport styles from './ProfileStatus.module.scss'\r\nimport {SvgSelector} from \"../../../../common/components/svgSelector/svgSelector\";\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusType> = ({status, isOwner, updateStatus}) => {\r\n\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [ProfileStatus, setStatus] = useState(status)\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        if (isEdit) {\r\n            update()\r\n        }\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    const update = () => {\r\n        updateStatus(ProfileStatus)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [status])\r\n\r\n    const isEditFalseStyle = !isOwner ? styles.disabled : styles.status\r\n\r\n    return (\r\n        <>\r\n            {!isEdit ?\r\n                <div onDoubleClick={toggleMode} className={isEditFalseStyle}>\r\n                    <span>{ProfileStatus || 'no status'}</span>\r\n                    {isOwner && <SvgSelector svgName={'edit'}/>}\r\n                </div> :\r\n                <input onBlur={toggleMode} onChange={onStatusChange} autoFocus\r\n                       value={ProfileStatus} className={styles.statusInput}/>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormInput_smallUserPhoto__xtUJN\",\"inputTextareaBasicLayout\":\"FormInput_inputTextareaBasicLayout__uPzAI\",\"formInputStyles\":\"FormInput_formInputStyles__fo98K\",\"formInput\":\"FormInput_formInput__G0-Qu\",\"blocksBorder\":\"FormInput_blocksBorder__hYKHO\",\"formCheckBox\":\"FormInput_formCheckBox__o+AZF\"};","import React from 'react';\r\nimport styles from './FormInput.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormInput({register, name, type, label, id, isNested}) {\r\n    if (isNested) {\r\n        name = `contacts.${name}`\r\n    }\r\n\r\n    const styleForInput = type === 'input' ? styles.formInput : styles.formCheckBox\r\n    return <>\r\n        <label htmlFor={name}><h3>{label}:</h3></label>\r\n        <input\r\n            className={styleForInput}\r\n            id={id}\r\n            name={name}\r\n            type={type}\r\n            placeholder={label}\r\n            {...register(name)}\r\n        />\r\n    </>\r\n}\r\n\r\n","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {ProfileType} from \"../../../../api/api\";\r\nimport styles from \"../ProfileInfo.module.scss\"\r\nimport {FormInput} from \"../../../../common/components/FormInput/FormInput\";\r\nimport {FormTextarea} from \"../../../../common/components/FormTextarea/FormTextarea\";\r\n\r\nexport const ProfileDataForm = ({profile, isOwner, profileEditStatus, saveProfile}: ProfileDataFormProps) => {\r\n    const {register, handleSubmit} = useForm({\r\n        defaultValues: {...profile}\r\n    })\r\n\r\n    const onSubmit = async (data: any) => {\r\n        saveProfile(data)\r\n    }\r\n\r\n    return <div>\r\n        <form onSubmit={handleSubmit(onSubmit)} className={styles.editProfileInformation}>\r\n            {profileEditStatus && <div className={styles.profileEditStatus}>{profileEditStatus}</div>}\r\n            {isOwner && <div className={styles.saveButtons}>\r\n                <button className={styles.saveButton}\r\n                        type=\"submit\">Save\r\n                </button>\r\n            </div>}\r\n            <div>\r\n                <FormInput id=\"fullName\"\r\n                           type=\"input\"\r\n                           name=\"fullName\"\r\n                           label=\"Full name\"\r\n                           register={register}\r\n                           isNested={false}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h3>About me</h3>\r\n                <FormTextarea id=\"aboutMe\"\r\n                              name=\"aboutMe\"\r\n                              label=\"Write about yourself...\"\r\n                              rows={3}\r\n                              validationSchema={{}}\r\n                              register={register}/>\r\n            </div>\r\n            <div>\r\n                <FormInput id=\"lookingForAJob\"\r\n                           type=\"checkbox\"\r\n                           name=\"lookingForAJob\"\r\n                           label=\"Looking for a job\"\r\n                           register={register}\r\n                           isNested={false}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Looking for a job description</h3>\r\n                <FormTextarea id=\"lookingForAJobDescription\"\r\n                              name=\"lookingForAJobDescription\"\r\n                              label=\"Write about a job which you're looking for...\"\r\n                              rows={3}\r\n                              validationSchema={{}}\r\n                              register={register}/>\r\n            </div>\r\n            <div>\r\n                {Object.keys(profile.contacts).map(contact => {\r\n\r\n                    return <div key={contact} className={styles.contactForm}>\r\n                        <FormInput id={contact}\r\n                                   type=\"input\"\r\n                                   name={contact}\r\n                                   label={contact}\r\n                                   isNested={true}\r\n                                   register={register}\r\n                        />\r\n\r\n                    </div>\r\n                })}</div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\ntype ProfileDataFormProps = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    setIsEdit: (boolean: boolean) => void\r\n    profileEditStatus: string | null\r\n    saveProfile: (profile: any) => void\r\n}","import styles from \"../ProfileInfo.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const Contact = ({contactTitle, contactValue}: ContactProps) => {\r\n    return (\r\n        <div className={styles.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ContactProps = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}","import styles from \"../ProfileInfo.module.scss\";\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../../api/api\";\r\nimport {Contact} from \"../Contact/Contact\";\r\n\r\nexport const ProfileData = ({profile, isOwner, setIsEdit}: ProfileDataProps) => {\r\n\r\n    const aboutMeField = profile.aboutMe\r\n    const lookingForAJobDescriptionField = profile.lookingForAJobDescription ? profile.lookingForAJobDescription : '...'\r\n\r\n    const contacts = Object.keys(profile.contacts).map((contact) => {\r\n        // @ts-ignore\r\n        const contactsValue = profile.contacts[contact]\r\n        if (contactsValue) {\r\n            // @ts-ignore\r\n            return <Contact key={contact} contactTitle={contact} contactValue={profile.contacts[contact]}/>\r\n        }\r\n    })\r\n\r\n    return <div className={styles.profileDataContainer}>\r\n        {Boolean(isOwner) && <div className={styles.settingButtons}>\r\n            <button onClick={() => setIsEdit(true)} className={styles.settingButton}> Settings</button>\r\n        </div>}\r\n        <div className={styles.aboutMe}>\r\n            <h3>About me:</h3><span>{aboutMeField}</span>\r\n        </div>\r\n        <div><b>Looking for a job\r\n            description</b>: {lookingForAJobDescriptionField}\r\n        </div>\r\n        <div>{contacts}</div>\r\n    </div>\r\n}\r\n\r\nexport type ProfileDataProps = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    setIsEdit: (boolean: boolean) => void\r\n}","import React, {ChangeEvent, useRef} from 'react';\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\nimport {ProfilePropsType} from \"../Profile\";\nimport userPhoto from \"../../../assets/images/avatar_empty.png\";\nimport {ProfileDataForm} from \"./ProfileDataForm/ProfileDataForm\";\nimport Preloader from \"../../../common/components/Preloader/Preloader\";\nimport styles from \"./ProfileInfo.module.scss\"\nimport {ProfileData} from \"./ProfileData/ProfileData\";\nimport {InteractUser} from \"./InteractUser/InteractUser\";\nimport {SvgSelector} from \"../../../common/components/svgSelector/svgSelector\";\n\nexport const ProfileInfo: React.FC<Omit<ProfilePropsType, 'setPage'>> = (props) => {\n    const {\n        isEdit,\n        setIsEdit,\n        profile,\n        status,\n        updateStatus,\n        isOwner,\n        savePhoto,\n        profileEditStatus,\n        saveProfile,\n        followingInProgress,\n        follow,\n        unFollow,\n        users,\n        userId\n    } = props\n\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const selectFileHandler = () => {\n        inputRef && inputRef.current?.click();\n    };\n\n    const uploadHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length) {\n            const file = e.target.files[0]\n            savePhoto(file)\n        }\n    }\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    let user = users.find(user => user.id === +userId)\n    if (!user) {\n        user = {\n            id: 0,\n            name: '',\n            status: '',\n            photos: {\n                small: '',\n                large: '',\n            },\n            followed: false\n        }\n    }\n\n    return (\n        <div className={styles.profileInfoContainer}>\n            <div className={styles.mainProfileBox}>\n                <img src={profile?.photos?.large ? profile.photos.large : userPhoto} alt={'photo'}\n                     className={styles.profilePhoto}/>\n\n                {Boolean(isOwner) && <div>\n                    <button onClick={selectFileHandler} className={styles.uploadImage}><SvgSelector svgName={'photo'}/>\n                    </button>\n                    <input\n                        style={{display: 'none'}}\n                        ref={inputRef}\n                        type=\"file\"\n                        onChange={uploadHandler}\n                    />\n                </div>}\n\n                <h2 className={styles.fullName}>{profile?.fullName}</h2>\n                <ProfileStatusWithHooks isOwner={isOwner} status={status} updateStatus={updateStatus}/>\n                {!isOwner &&\n                    <div className={styles.interactProfile}>\n                        <InteractUser followingInProgress={followingInProgress} follow={follow}\n                                      unFollow={unFollow}\n                                      user={user}/>\n                    </div>}\n            </div>\n            <div className={styles.restProfileInformation}>{isEdit ?\n                <ProfileDataForm saveProfile={saveProfile} profileEditStatus={profileEditStatus} profile={profile}\n                                 isOwner={isOwner} setIsEdit={setIsEdit}/> :\n                <ProfileData profile={profile} isOwner={isOwner} setIsEdit={setIsEdit}/>}</div>\n        </div>\n    )\n}\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"NewsSection_smallUserPhoto__P8eTT\",\"inputTextareaBasicLayout\":\"NewsSection_inputTextareaBasicLayout__PZvWZ\",\"blocksBorder\":\"NewsSection_blocksBorder__OXBvf\",\"section\":\"NewsSection_section__qNArD\",\"news\":\"NewsSection_news__iaStz\",\"aboutFeatures\":\"NewsSection_aboutFeatures__T4b80\",\"infoText\":\"NewsSection_infoText__E7nwM\",\"openButton\":\"NewsSection_openButton__jnGd1\",\"newsLink\":\"NewsSection_newsLink__VxKCD\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__oWC95\",\"modal_content\":\"Modal_modal_content__oghCV\",\"infoText\":\"Modal_infoText__2cmAL\",\"close\":\"Modal_close__u2RNl\",\"active\":\"Modal_active__y79lJ\"};","import React, {FC} from \"react\";\r\nimport s from './Modal.module.scss'\r\nimport {SvgSelector} from \"../svgSelector/svgSelector\";\r\n\r\ntype Props = {\r\n    active: boolean\r\n    setActive: (value: boolean) => void\r\n}\r\n\r\nexport const Modal: FC<Props> = ({active, setActive}) => {\r\n    const closeHandler = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div className={active ? `${s.modal} ${s.active}` : s.modal} onClick={() => setActive(false)}>\r\n            <div className={active ? `${s.modal_content} ${s.activeContent}` : s.modal_content}\r\n                 onClick={e => e.stopPropagation()}>\r\n                <SvgSelector svgName={'underDevelopment'}/>\r\n                <div className={s.infoText}>\r\n                    <h3>The project is under development.\r\n                        <br/>\r\n                        Some features may be unavailable.</h3>\r\n                </div>\r\n                <button className={s.close} onClick={closeHandler}>Close</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport styles from './NewsSection.module.scss'\r\nimport {AppPage} from \"../../../app/app-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SvgSelector} from \"../../../common/components/svgSelector/svgSelector\";\r\nimport {Modal} from \"../../../common/components/Modal/Modal\";\r\n\r\nexport const NewsSection: React.FC<Props> = ({setPage}) => {\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n\r\n    const onClickHandler = () => {\r\n        setPage('news')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.section}>\r\n            <div className={styles.aboutFeatures}>\r\n                <SvgSelector svgName={'info'}/>\r\n                <div className={styles.infoText}>\r\n                    <h3>Information\r\n                        <br/>\r\n                        ABOUT FEATURES</h3>\r\n                </div>\r\n                <button className={styles.openButton} onClick={() => setModalActive(true)}>Read</button>\r\n            </div>\r\n            <div className={styles.news}>\r\n                <h3>News</h3>\r\n                <div>With the unveiling of the Nevera Time Attack, at The Quail, A Motorsports Gathering, Rimac\r\n                    Automobili is celebrating a year of breaking performance records – more than 20 so far in 2023.\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>..more</NavLink>\r\n                </div>\r\n                <div>The California Department of Motor Vehicles today requested that Cruise cut in half its fleet of\r\n                    driverless cars in San Francisco, following “concerning incidents” involving the vehicles.\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>\r\n                        ..more\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    Amsterdam to use \"noise cameras\" against too loud cars. Amsterdam has started the fight against\r\n                    noisy motorcycles and cars.\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>..more</NavLink>\r\n                </div>\r\n            </div>\r\n            {modalActive && <Modal active={modalActive} setActive={setModalActive}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\ntype Props = {\r\n    setPage: (page: AppPage) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Gwueq\",\"posts\":\"MyPosts_posts__gd2qk\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"Post_smallUserPhoto__yMmQ0\",\"inputTextareaBasicLayout\":\"Post_inputTextareaBasicLayout__DskKz\",\"blocksBorder\":\"Post_blocksBorder__w656s\",\"item\":\"Post_item__nRPBK\",\"nameBox\":\"Post_nameBox__y7+Eh\",\"postMessage\":\"Post_postMessage__S02tE\",\"postFooter\":\"Post_postFooter__nqSRi\",\"likes\":\"Post_likes__VQ0Ou\",\"delete\":\"Post_delete__ByE-Q\",\"postForm\":\"Post_postForm__Sz8W9\"};","import React from 'react';\nimport styles from './Post.module.scss'\nimport {PostType} from \"../../profile-reducer\";\nimport userPhoto from \"../../../../assets/images/avatar_empty.png\";\nimport {SvgSelector} from \"../../../../common/components/svgSelector/svgSelector\";\n\n\nconst Post: React.FC<MyPostPropsType> = (props) => {\n\n    const postDeleteHandler = (postId: string) => {\n        props.deletePost(postId)\n    }\n\n    return (\n        <>\n            <div className={styles.item}>\n                <div className={styles.nameBox}>\n                    <img src={props.image || userPhoto} alt=\"ava\"/>\n                    <h3>{props.name}</h3>\n                </div>\n                <div className={styles.postMessage}>{props.message}</div>\n                <div className={styles.postFooter}>\n                    <div className={styles.likes}>\n                        <SvgSelector svgName={'likes'}/>\n                        <span>{props.likes}</span>\n                    </div>\n                    <button className={styles.delete} onClick={() => postDeleteHandler(props.id)}><SvgSelector svgName={'delete'}/></button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Post;\n\ntype MyPostPropsType = PostType & { deletePost: (postId: string) => void }","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"AddPostForm_smallUserPhoto__DVq0z\",\"inputTextareaBasicLayout\":\"AddPostForm_inputTextareaBasicLayout__+RmBC\",\"blocksBorder\":\"AddPostForm_blocksBorder__snjUp\",\"addPostForm\":\"AddPostForm_addPostForm__8tKym\",\"messageTextarea\":\"AddPostForm_messageTextarea__0pork\",\"sendPost\":\"AddPostForm_sendPost__Dijuu\"};","import {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport styles from './AddPostForm.module.scss'\r\nimport {FormTextarea} from \"../../../../common/components/FormTextarea/FormTextarea\";\r\n\r\nexport const AddPostForm = (props: AddPostFormType) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset\r\n    } = useForm<IPostFormInput>();\r\n    const onSubmit: SubmitHandler<IPostFormInput> = data => {\r\n        props.addPost(data)\r\n        reset()\r\n\r\n    };\r\n    return <form onSubmit={handleSubmit(onSubmit)} className={styles.addPostForm}>\r\n        <div className={styles.messageTextarea}>\r\n            <FormTextarea id=\"post\"\r\n                          name=\"post\"\r\n                          label=\"Write youre post...\"\r\n                          rows={3}\r\n                          register={register}\r\n                          validationSchema={{\r\n                              required: true\r\n                          }}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={styles.sendPost}>Publish</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport type IPostFormInput = {\r\n    post: string\r\n}\r\n\r\ntype AddPostFormType = {\r\n    addPost: (post: IPostFormInput) => void\r\n}\r\n\r\n","import React from 'react';\nimport s from './MyPosts.module.scss'\nimport Post from \"./Post/Post\";\nimport {MyPostsCommonType} from \"./MyPostsContainer\";\nimport {AddPostForm} from \"./Post/AddPostForm\";\n\nclass MyPosts extends React.Component<MyPostsCommonType> {\n\n    shouldComponentUpdate(nextProps: Readonly<MyPostsCommonType>, nextState: Readonly<{}>): boolean {\n        return nextProps !== this.props || nextState !== this.state\n    }\n\n    render() {\n        const {profilePage, auth, addPost, deletePost} = this.props\n\n        const isOwner = profilePage?.profile?.userId === auth.id\n\n        const postElements = profilePage.posts.map(post =>\n            <Post key={post.id} message={post.message}\n                  image={profilePage.profile?.photos.small}\n                  name={profilePage.profile?.fullName}\n                  deletePost={deletePost}\n                  likes={post.likes}\n                  id={post.id}\n            />)\n\n        return (\n            <>\n                <div className={s.postsBlock}>\n                    {isOwner && <AddPostForm addPost={addPost}/>}\n                    <div className={s.posts}>\n                        {postElements}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default MyPosts;\n\n\n","import React, {ComponentType} from 'react';\nimport {addPost, deletePost, ProfileStateType} from \"../profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../app/redux-store\";\nimport {IPostFormInput} from \"./Post/AddPostForm\";\nimport {AuthStateType} from \"../../Login/auth-reducer\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage,\n        auth: state.auth\n    }\n}\n\nexport const MyPostsContainer = compose<ComponentType>(connect(mapStateToProps, {addPost, deletePost}))(MyPosts)\n\ntype mapStateToPropsType = {\n    profilePage: ProfileStateType\n    auth: AuthStateType\n}\n\ntype mapDispatchToProps = {\n    addPost: (post: IPostFormInput) => void\n    deletePost: (postId: string) => void\n}\n\nexport type MyPostsCommonType = mapDispatchToProps & mapStateToPropsType\n\n","import React from 'react';\nimport styles from './Profile.module.scss'\nimport {AppPage} from \"../../app/app-reducer\";\nimport {UserType} from \"../Users/users-reducer\";\nimport {ProfileType} from \"../../api/api\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {NewsSection} from \"./NewsSection/NewsSection\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\n    return (\n        <div className={styles.profileContainer}>\n            <ProfileInfo setIsEdit={props.setIsEdit} isEdit={props.isEdit} saveProfile={props.saveProfile}\n                         profileEditStatus={props.profileEditStatus} savePhoto={props.savePhoto} isOwner={props.isOwner}\n                         profile={props.profile} status={props.status} updateStatus={props.updateStatus}\n                         followingInProgress={props.followingInProgress}\n                         follow={props.follow} unFollow={props.unFollow} users={props.users} userId={props.userId}\n            />\n            <MyPostsContainer/>\n            <NewsSection setPage={props.setPage}/>\n        </div>\n    )\n}\n\nexport type ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n    profileEditStatus: string | null\n    isEdit: boolean\n    updateStatus: (status: string) => void\n    isOwner: boolean\n    savePhoto: (file: File) => void\n    saveProfile: (profile: any) => void\n    setIsEdit: (isEdit: boolean) => void\n    setPage: (page: AppPage) => void\n    followingInProgress: number[]\n    follow: (userId: number) => void\n    unFollow: (userId: number) => void\n    users: UserType[]\n    userId: string\n}\n\n\n\n","import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, savePhoto, saveProfile, setIsEdit, updateStatus} from \"./profile-reducer\";\nimport {AppStateType} from \"../../app/redux-store\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {ProfileType} from \"../../api/api\";\nimport {withAuthRedirect} from \"../../common/hoc/withAuthRedirect\";\nimport {AppPage, setPage} from \"../../app/app-reducer\";\nimport {follow, unFollow, UserType} from \"../Users/users-reducer\";\n\nexport class ProfileAPIComponent extends React.Component<PropsType> {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.profileId!.toString()\n            if (!userId) {\n                this.props.history.push('login')\n            }\n        }\n\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return <Profile isOwner={!this.props.match.params.userId}\n                        userId={this.props.match.params.userId}\n                        {...this.props}\n                        profile={this.props.profile}\n                        status={this.props.status}\n                        savePhoto={this.props.savePhoto}\n                        updateStatus={this.props.updateStatus}\n                        profileEditStatus={this.props.profileEditStatus}\n                        saveProfile={this.props.saveProfile}\n                        isEdit={this.props.isEdit}\n                        setIsEdit={this.props.setIsEdit}\n                        setPage={this.props.setPage}\n                        followingInProgress={this.props.followingInProgress}\n                        follow={this.props.follow}\n                        unFollow={this.props.unFollow}\n                        users={this.props.users}\n        />\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    profileId: state.auth.id,\n    profileEditStatus: state.profilePage.profileEditStatus,\n    isEdit: state.profilePage.isEdit,\n    selectedPage: state.app.selectedPage,\n    followingInProgress: state.usersPage.followingInProgress,\n    users: state.usersPage.users\n})\n\nconst ProfileContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        getProfile,\n        getStatus,\n        updateStatus,\n        savePhoto,\n        saveProfile,\n        setIsEdit,\n        setPage,\n        follow,\n        unFollow\n    }),\n    withRouter, withAuthRedirect)(ProfileAPIComponent)\n\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype mapDispatchToPropsType = {\n    getProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n    updateStatus: (status: string) => void\n    savePhoto: (file: File) => void\n    saveProfile: (profile: any) => void\n    setIsEdit: (isEdit: boolean) => void\n    setPage: (page: AppPage) => void\n    follow: (userId: number) => void\n    unFollow: (userId: number) => void\n}\n\ntype mapStateToPropsType = {\n    profile: ProfileType | null\n    status: string\n    profileId: number | null\n    profileEditStatus: string | null\n    isEdit: boolean\n    selectedPage: AppPage\n    followingInProgress: number[]\n    users: UserType[]\n}\n\ntype OwnPropsType = mapStateToPropsType & mapDispatchToPropsType\n\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nexport default ProfileContainer"],"names":["FormTextarea","_ref","register","name","label","id","rows","validationSchema","_jsx","_Fragment","children","_objectSpread","className","styles","styleTextarea","placeholder","ProfileStatusWithHooks","status","isOwner","updateStatus","_useState","useState","_useState2","_slicedToArray","isEdit","setIsEdit","_useState3","_useState4","ProfileStatus","setStatus","toggleMode","update","useEffect","isEditFalseStyle","onBlur","onChange","e","currentTarget","value","autoFocus","_jsxs","onDoubleClick","SvgSelector","svgName","FormInput","type","isNested","concat","styleForInput","htmlFor","ProfileDataForm","profile","profileEditStatus","saveProfile","_useForm","useForm","defaultValues","handleSubmit","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","stop","_x","apply","arguments","editProfileInformation","saveButtons","saveButton","Object","keys","contacts","map","contact","contactForm","Contact","contactTitle","contactValue","ProfileData","aboutMeField","aboutMe","lookingForAJobDescriptionField","lookingForAJobDescription","profileDataContainer","Boolean","settingButtons","onClick","settingButton","ProfileInfo","props","_profile$photos","savePhoto","followingInProgress","follow","unFollow","users","userId","inputRef","useRef","Preloader","user","find","photos","small","large","followed","profileInfoContainer","mainProfileBox","src","userPhoto","alt","profilePhoto","_inputRef$current","current","click","uploadImage","style","display","ref","target","files","length","file","fullName","interactProfile","InteractUser","restProfileInformation","Modal","active","setActive","s","modal","modal_content","activeContent","stopPropagation","infoText","close","NewsSection","setPage","modalActive","setModalActive","onClickHandler","NavLink","to","image","message","likes","postId","deletePost","AddPostForm","reset","addPost","required","MyPosts","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","key","nextProps","nextState","this","state","_profilePage$profile","_this$props","profilePage","auth","postElements","posts","post","_profilePage$profile2","_profilePage$profile3","Post","React","MyPostsContainer","compose","connect","Profile","ProfileAPIComponent","match","params","profileId","toString","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","selectedPage","app","usersPage","withRouter","withAuthRedirect"],"sourceRoot":""}