{"version":3,"file":"static/js/76.a3e2619c.chunk.js","mappings":"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","sources":["webpack://social-network/./src/common/components/FormTextarea/FormTextarea.module.scss?640e","common/components/FormTextarea/FormTextarea.tsx","webpack://social-network/./src/features/Dialogs/Dialogs.module.scss?cfe8","webpack://social-network/./src/features/Dialogs/DialogItem/DialogItem.module.scss?0cb9","features/Dialogs/DialogItem/DialogItem.tsx","webpack://social-network/./src/features/Dialogs/Messages/Messages.module.scss?e728","features/Dialogs/Messages/Messages.tsx","features/Dialogs/Messages/AddMessageForm.tsx","features/Dialogs/Dialogs.tsx","features/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormTextarea_smallUserPhoto__8UorU\",\"inputTextareaBasicLayout\":\"FormTextarea_inputTextareaBasicLayout__VHrFF\",\"formTextareaStyles\":\"FormTextarea_formTextareaStyles__zu1mT\",\"styleTextarea\":\"FormTextarea_styleTextarea__7b86e\",\"formInputStyles\":\"FormTextarea_formInputStyles__9Ewuh\",\"formInput\":\"FormTextarea_formInput__0HwW6\",\"blocksBorder\":\"FormTextarea_blocksBorder__NQLGB\",\"formCheckBox\":\"FormTextarea_formCheckBox__biQVA\"};","import React from 'react';\r\nimport styles from './FormTextarea.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormTextarea({register, name, label, id, rows, validationSchema}) {\r\n\r\n    return <>\r\n        <textarea\r\n            className={styles.styleTextarea}\r\n            id={id}\r\n            name={name}\r\n            placeholder={label}\r\n            rows={rows}\r\n            {...register(name, validationSchema)}\r\n        />\r\n    </>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"Dialogs_smallUserPhoto__Y-Leu\",\"inputTextareaBasicLayout\":\"Dialogs_inputTextareaBasicLayout__OGTdw\",\"blocksBorder\":\"Dialogs_blocksBorder__FnmkN\",\"dialogsContainer\":\"Dialogs_dialogsContainer__mjcQR\",\"dialogsItems\":\"Dialogs_dialogsItems__B89Lr\",\"messagesContainer\":\"Dialogs_messagesContainer__d3Hak\",\"messages\":\"Dialogs_messages__Q4dqb\",\"userPhoto\":\"Dialogs_userPhoto__Qyair\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"DialogItem_smallUserPhoto__mFqEO\",\"userPhoto\":\"DialogItem_userPhoto__cGIaD\",\"inputTextareaBasicLayout\":\"DialogItem_inputTextareaBasicLayout__4tntI\",\"blocksBorder\":\"DialogItem_blocksBorder__iXWin\",\"dialogs\":\"DialogItem_dialogs__h-EAu\",\"dialogsItems\":\"DialogItem_dialogsItems__96q7A\",\"dialog\":\"DialogItem_dialog__-kXND\",\"nameLink\":\"DialogItem_nameLink__n+baJ\",\"messages\":\"DialogItem_messages__65dsz\"};","import React from 'react';\nimport s from './DialogItem.module.scss'\nimport {NavLink} from \"react-router-dom\";\nimport {DialogType} from \"../dialogs-reducer\";\nimport userPhoto from \"../../../assets/images/avatar_empty.png\";\n\nexport const DialogItem: React.FC<DialogItemPropsType> = (props) => {\n    const path = `/dialogs/${props.id}`\n    return (\n        <div className={s.dialog}>\n            <img src={userPhoto} alt=\"userPhoto\" className={s.userPhoto}/>\n            <NavLink to={path} className={s.nameLink}>{props.name}</NavLink>\n        </div>\n    )\n}\ntype DialogItemPropsType = DialogType","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"Messages_smallUserPhoto__mtAKQ\",\"message\":\"Messages_message__dh8n3\",\"userPhoto\":\"Messages_userPhoto__Mfibs\",\"inputTextareaBasicLayout\":\"Messages_inputTextareaBasicLayout__kIW4v\",\"blocksBorder\":\"Messages_blocksBorder__HuEzL\",\"messageText\":\"Messages_messageText__5TBAB\",\"friendMessageText\":\"Messages_friendMessageText__i1rPZ\",\"addMessageForm\":\"Messages_addMessageForm__o1Isj\",\"messageTextarea\":\"Messages_messageTextarea__XQYkd\",\"sendMessage\":\"Messages_sendMessage__hgLNa\"};","import React from 'react';\nimport s from \"./Messages.module.scss\"\nimport {MessageType} from \"../dialogs-reducer\";\nimport userPhoto from \"../../../assets/images/avatar_empty.png\";\n\ntype MessagePropsType = MessageType\n\nexport const Message: React.FC<MessagePropsType> = (props) => {\n    return (\n        <div className={s.message}>\n            <img src={userPhoto} alt=\"userPhoto\" className={s.userPhoto}/>\n            <span className={s.messageText}>{props.message}</span>\n        </div>\n    )\n}\n\n\n","import {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport {FormTextarea} from \"../../../common/components/FormTextarea/FormTextarea\";\r\nimport s from \"./Messages.module.scss\"\r\n\r\n\r\nexport const AddMessageForm = (props: AddMessageFormType) => {\r\n    const {register, handleSubmit, reset, formState: {errors}} = useForm<IMessageFormInput>();\r\n    const onSubmit: SubmitHandler<IMessageFormInput> = data => {\r\n        props.addMessage(data)\r\n        reset()\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit(onSubmit)} className={s.addMessageForm}>\r\n\r\n        <div className={s.messageTextarea}>\r\n            <FormTextarea id=\"message\"\r\n                          name=\"message\"\r\n                          label=\"Write a message...\"\r\n                          rows={3}\r\n                          register={register}\r\n                          validationSchema={{\r\n                              required: true\r\n                          }}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={s.sendMessage}>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport type IMessageFormInput = {\r\n    message: string\r\n}\r\n\r\ntype AddMessageFormType = {\r\n    addMessage: (message: IMessageFormInput) => void\r\n}","import React, {useEffect} from 'react';\nimport styles from './Dialogs.module.scss'\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {CommonDialogsType} from \"./DialogsContainer\";\nimport userPhoto from \"../../assets/images/avatar_empty.png\";\nimport {Message} from \"./Messages/Messages\";\nimport {AddMessageForm} from \"./Messages/AddMessageForm\";\n\nconst Dialogs: React.FC<CommonDialogsType> = (props) => {\n    const {dialogPage, addMessage} = props\n    let DialogItems = dialogPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\n    let Messages = dialogPage.messages.slice(1).map(message => <Message key={message.id} message={message.message}/>)\n\n    useEffect(() => {\n        props.setPage('dialogs')\n    }, [])\n\n    return (\n        <div className={styles.dialogsContainer}>\n            <div className={styles.dialogsItems}>\n                {DialogItems}\n            </div>\n            <div className={styles.messagesContainer}>\n                <div className={styles.messages}>\n                    <div className={styles.message}>\n                        <img src={userPhoto} alt=\"userPhoto\" className={styles.userPhoto}/>\n                        <span className={styles.friendMessageText}>{dialogPage.messages[0].message}</span>\n                    </div>\n                    {Messages}\n                </div>\n                <AddMessageForm addMessage={addMessage}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n\n","import React from 'react';\nimport {\n    addMessage,\n    DialogStateType\n} from \"./dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../app/redux-store\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../common/hoc/withAuthRedirect\";\nimport {AppPage, setPage} from \"../../app/app-reducer\";\nimport {IMessageFormInput} from \"./Messages/AddMessageForm\";\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogPage: state.dialogPage\n    }\n}\n\nconst DialogsContainer = compose<React.ComponentType>(withAuthRedirect, connect(mapStateToProps, {\n    addMessage,\n    setPage\n}))(Dialogs)\n\nexport type mapStateToPropsType = {\n    dialogPage: DialogStateType\n}\n\nexport type mapDispatchToPropsType = {\n    addMessage: (message: IMessageFormInput) => void\n    setPage: (setPage: AppPage) => void\n}\n\nexport type CommonDialogsType = mapStateToPropsType & mapDispatchToPropsType\n\nexport default DialogsContainer"],"names":["FormTextarea","_ref","register","name","label","id","rows","validationSchema","_jsx","_Fragment","children","className","styles","styleTextarea","placeholder","DialogItem","props","path","concat","_jsxs","s","src","userPhoto","alt","NavLink","to","Message","message","AddMessageForm","handleSubmit","reset","formState","errors","useForm","onSubmit","data","addMessage","required","dialogPage","DialogItems","dialogs","map","dialog","Messages","messages","slice","useEffect","setPage","dialogsContainer","dialogsItems","messagesContainer","friendMessageText","compose","withAuthRedirect","connect","state","Dialogs"],"sourceRoot":""}